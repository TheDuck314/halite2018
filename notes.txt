
                        Psi.MINING_NPV_FUDGE_FACTOR=1.0    2p:  133-86    4p:  133-96-113-93
                        Psi.MINING_NPV_FUDGE_FACTOR=0.0    2p:  86-133    4p:  302-339-322-342
but in a re-test:
                                                    Psi    2p:  188-153    4p:  168-167-135-154
                                                    Chi    2p:  153-188    4p:  456-457-489-470



                             Phi.MAX_HALITE_TO_RAM_2P=0    2p:  13-68    4p:   0- 0- 0- 0
                           Phi.MAX_HALITE_TO_RAM_2P=200    2p:  36-46    4p:   0- 0- 0- 0
                           Phi.MAX_HALITE_TO_RAM_2P=400    2p:  44-40    4p:   0- 0- 0- 0
                           Phi.MAX_HALITE_TO_RAM_2P=600    2p:  42-41    4p:   0- 0- 0- 0
                           Phi.MAX_HALITE_TO_RAM_2P=800    2p:  40-44    4p:   0- 0- 0- 0
                          Phi.MAX_HALITE_TO_RAM_2P=1000    2p:  239-175    4p:   0- 0- 0- 0


        for (int d : {8, 10, 12}) {
            const int diff_d = num_allies_within[d] - num_enemies_within[d];
            if (diff_d != 0) return diff_d > 0;
        }
        return true;
 Phi    2p:  216-193    4p:   0- 0- 0- 0


let fleeing ships push others out of the way!! this will probably be super good, locally anyway

there's still more to do on low-halite vs high-halite ramming. study 2p games against teccles
he always has much fewer dropped, and I guess must be extra cautious with high-halite ships.
I sometimes ram 800 halite ships into 100 halite ships
also, he seems quite reckless with low-halite ships
it's hard to see how ramming a 600 with a 50 could turn out badly, on average


Rachol and teccles both have evasion in 4p see https://halite.io/play/?game_id=1993792 where teccles often moves to evade mlomb (who rams me a lot)

predict movement of returners and use it for safety?

let's do something like: if a guy's a known rammer, then it's unsafe to move next to one of his
ships with < 500 halite if we have more halite than that ship, and also we should flee if we find
ourself in that situation. maybe?



don't flee if we have like <50 halite?

at some point I need a solution for games like https://halite.io/play/?game_id=1987649
where I get blocked off from a dropoff.
It's probably as simple as judging nearest dropoff by bfs rather than dist()


think more about generalized cautiousness detection

consider returning early based on a halite discount rate calculation. I.e. we will delay our next load of halite by
some number of turns, but we'll deliver our current amount earlier.

fix fluorine flog thing

predictive ramming!

still think something along the lines of "if one player really outnumbers in a small radius, they win the fight regardless of the big radius circumstances" should be true

really need halite-provenance in fluorine


time stuff

try not letting high-halite ships collide, at least with low-halite ships

try counting high-halite allies less when deciding whether to fight

near enemy dropoffs, be more cautious, e.g. only count allies closer than the dropoff

be more cautious with high halite

really need per-ship impassability maps

study teccles dropoffs

don't ram too-low-halite enemies in 4p at end

Let's do a fancy function to determine safety that's very different from the current one, lots of exponential decays or something


suppose impassability is only a function of
- num allies  in radius 1
- num enemies in radius 1
- num allies  in radius 2
- num enemies in radius 2
- num allies  in radius 3
- num enemies in radius 3
...
Currently the rule is
- num allies in radius 8 > num enemies in radius 8
It seems possibily that even if this isn't true, if you have an overwhelming advantage at radius 4 you might want to go for it?
And similarly if it isn't true but you have an overwhelming advantage at radius 10 you might want to go for it



list of effects I'm ignoring
-MINING_DIST_FROM_BASE_MULT=2.0 looked better by 326-223 for 2p, neutral for 4p
-MINING_INSPIRATION_MULT=4.5    2p:  175-128


NOTES ON COMBAT
- Rachol probably prefers to ram high-halite ships with low-halite ships, which does sound good
- Rachol is ramming late-game in 4p. And maybe prefers to ram the leader? Or at any rate strategically chooses who to go after

I think I really could benefit from
 - prefer to choose mining locations near good dropoffs
 - anticipate dropoff construction and rally there even before it's built. need to be careful that the halite to construct it actually gets delivered to the shipyard though
 - prefer to make dropoffs near miners

Think about things that will look worse locally than in live because of the fleeing behavior of enemies.

need to speed things up

ram less with high-halite ships

should be cautious in 2p about moving high halite ships next to enemies

should ram less near enemy dropoffs?

consider trying to do minimum-time pathfinding to the mining tgt square?

when we get near to wanting to build a dropoff, bias our miners toward where it's gonna be chosen to go!

NOTES ON MINING
- The 2*dist_from_here part of the mining planning seems wrong. Why do we do worse when we make it 1*?
  Maybe it's because we neglect the halite cost of moving. We could model that explicitly!
- Similarly, the "tgt must have 3x halite to move there" logic seems wrong. Is it covering for the same issue?
- I'm pretty into the idea of computing halite cost to get to each square, and then adding that into the halite_needed for that square
- The factor of 0.7 in the naive_mine_rate is wrong if we'll actually fill up in 1 or 2 turns.
- Similarly, should the 3*here_halite thing depend on how close we are to filling up? maybe, if we're really close to full, we should relax it?

- the whole turns to fill up calculation assumes that the single square we are considering is representative of a whole region. but
  that's obviously false. we'll be overoptimistic about the total time if we're considering a square that has higher halite than its
  neighbors, and if we'll need to visit those neighbors to fill up.

- Idea: if a ship knows it's not going to fill up from its mining target, it should be able to reserve the best adjacent square,
  assuming no closer ship wants that square. Or, instead of the best adjacent square, what it thinks its mining target will be
  after it finishes its current square? can even do that with a sim.

- We may over-value near-to-us or near-to-base squares because we'll assume there are infinite other squares with the same
  dist_from_me and dist_from_base which may not be true (same as how we'll overvalue extra-high-halite squares b/c we'll
  assume there are plenty more where that one came from).

- A silly thing that can happen: a miner is staying still instead of moving to its tgt b/c of the here_halite vs tgt_halite logic,
  but a Returner wants to move through the miner, so the miner gets swapped further away from its tgt. Instead the miner ideally should
  just move toward its tgt, if possible. My original thinking here was that most likely the swap will bring you closer to your tgt
  on average, but it's not going to always be true.

I think consider_ramming (and maybe other stuff) overrides the final collapse, which is silly

Miners heading out shouldn't dodge around returners coming in just b/c the returner is moving onto an adjacent
square. Miner should just wait 1 turn and then probably swap places.

try breaking ties in mining tgt conflicts between ships by ship halite, or base distance, or whatever?

low-halite-pathfind to mining targets

tony maybe builds for longer in 4p? to 1000 halite/ship maybe?

in 4p, whether you should ram a ship depends heavily on a combination of its halite and time left. try this!

consider picking up halite on the way back

optimal ship stopping probably depends on map size? on small maps, everyone's probably inspired all the time and you can build later

figure out why so many ships got stuck in https://halite.io/play/?game_id=1529637&replay_class=1&replay_name=replay-20181107-071034%2B0000-1541574463-56-56-1529637

consider decreasing min-dist-to-enemy-dropff!

consider being more cautious about ramming near enemy structures

recent reasons for losing:
someone made a dropoff too near where I wanted one, so I built a really crappy dropoff instead
subpar fleeing?
getting deliberately rammed a lot in 4p late game

THIS SHOULD BE HIGH PRIORITY:
I really need to able to flee onto allies' squares by pushing them off

consider_fleeing() is attracted to the closest ally, but if that ally also needs to flee this could screw over that ally by stealing its spot!
Maybe need an iterated fleeing system like plan_mining.
It could maybe pre-resolve the case of "I want to flee onto an ally's square" so that resolve_plans_into_commands doesn't have to do that!
Or, maybe resolve_plans_into_commands is the right place

"Flee towards closest ally" is a pretty dumb heuristic

Every collision probably represents a mistake

can we be more assertive in 4p? change the "safety" threshold? fit a model offline or online to predict whether they'll move onto a given square?

my returners are ramming people on the way home at the end in 4p, which is idiotic
in general my returners gonna casually ram enemies I designate as "passable"?? that seems pretty wrong

Consider evasion in 4p. Might want to first write something to check whether a player has rammed in this game (not trivial)

in 4p, avoid collisions in the last few rounds before we'll need to collapse

probably something to be gotten by not ramming with high-halite ships

maybe need some repulsion in mining targets

dropoff distance penalty may be too heavy handed. or not heavy handed enough! tune it.

tune the bonus for returning to a richer dropoff

need some hysteresis in dropoff location choice

we need to not be so scared of recent enemy dropoffs
https://halite.io/play/?game_id=1166131&replay_class=1&replay_name=replay-20181030-074422%2B0000-1540884547-64-64-1166131

in 2p there's probably a lot of value in grouping -- at least, our low-halite ships
should be attracted to wherever the action is

consider tuning the parameter of when to stop making ships

consider tuning the min nearby halite to make a dropoff / min dist between dropoffs

min dist between dropoffs should logically be a function of halite density at the new dropoff
higher halite density justifes closer-spaced dropoffs (especially on smaller maps?)

in 4p, at the end, we can ram empty ships into whichever player is closest ahead of us (or closest behind us if we're winning)

I'm probably not building enough dropoffs on big 2p maps with a lot of halite

flee toward base, not allies?

don't ram when you don't have enough spare capacity nearby to pick up the halite?

maybe the advance dropoffs are bad because they're very far from the turtles and they have to 
spend tons of time getting there. that suggests there should be benefits from:
 - anticipating the dropoff location and preferring to mine near there
 - preferring to build the dropoffs closer to base, and closer to our ships

- when choosing mining target ships should take into account expected mining rate of *next* trip.
  that is, consider returning to all possible dropoffs, and consider the return time & expected next-trip mining rate,
  calculate an overall mining rate for each possible return, and max over them.

- think about whether our "halite rate" mining target selection is quite correct.
  it's neglecting the benefit of getting our already-held halite back to base earlier
  the benefit of that increases with the amount of halite we have (and with the usefulness of spawning new ships)
  so maybe there's room for a term that pushes for targets closer to base when we have lots of halite, and when we are still spawning ships (and is even higher early in the game?)
  would be sweet if we could figure out how to estimate numerically the time value of halite, whatever that means

- we could have the threshold for returning be lower when you're closer to base, since the time cost is lower

- we have a stupid thing where we choose a mining target that we don't know how to path to so we stay still

- returners shouldn't force miners to evade if they have a free path.

Rachol pre-sends his miners to where he knows he is going to build his dropoff.
I can do this too but I'd need to make sure I don't decide to place the dropoff somewhere else.
Also he doesn't just send his returning miners.


try the thing where we do a few iterations of mining target replanning with some repulsion
between the mining targets

we may want to send ships back at like 500 halite in the late game to reduce the risk of getting rammed with a full load

could hunt in packs!

if the ally currently mining a square is going to fill up before exhausting it, we could consider
it valid to have a second guy choose it as a mining target, using a lowered halite score

think more about preferring to mine near enemies in 4p games, even when there isn't instantaneous inspiration. there's an NAP-like idea here






Notes on tuning the 4p ship-spawning condition:
                Pi.MIN_HALITE_PER_SHIP_TO_SPAWN_4P=2500    2p:   0- 0    4p:  66-54-65-38
                Pi.MIN_HALITE_PER_SHIP_TO_SPAWN_4P=3500    2p:   0- 0    4p:  157-169-158-185


Results of letting us consider squares passable in the last 100 turns of 4p using we_win_fight_4p
                                                     Pi    2p:   0- 0    4p:  62-32-21-14
                                                Omicron    2p:   0- 0    4p:  67-97-108-115







tuning
        if (halite_from_staying >= K * max(10, est_halite_rate)) {
1.5
                                                  Sigma    2p:  28-15    4p:  20-31-25-19
                                                    Rho    2p:  15-28    4p:  75-64-70-76
2.0
                                                  Sigma    2p:  52-50    4p:  57-58-47-52




                           Tau.FIGHT_COUNT_RADIUS_2P=10    2p:  56-25    4p:   0- 0- 0- 0
                            Tau.FIGHT_COUNT_RADIUS_2P=8    2p:  59-22    4p:   0- 0- 0- 0
                            Tau.FIGHT_COUNT_RADIUS_2P=6    2p:  58-22    4p:   0- 0- 0- 0
                            Tau.FIGHT_COUNT_RADIUS_2P=4    2p:  69-173    4p:   0- 0- 0- 0



A result I'm not going to do anything about:
                     Tau.MINING_DIST_FROM_BASE_MULT=1.5    2p:  315-235    4p:  260-273-262-241
                     Tau.MINING_DIST_FROM_BASE_MULT=2.0    2p:  326-223    4p:  243-257-270-266
                     Tau.MINING_DIST_FROM_BASE_MULT=2.5    2p:  311-238    4p:  204-236-278-318
                     Tau.MINING_DIST_FROM_BASE_MULT=3.0    2p:  279-270    4p:  145-212-285-394
                     Tau.MINING_DIST_FROM_BASE_MULT=3.5    2p:  243-306    4p:  79-193-254-510
                     Tau.MINING_DIST_FROM_BASE_MULT=4.0    2p:  202-347    4p:  54-113-259-610
                     Tau.MINING_DIST_FROM_BASE_MULT=1.0    2p:  1619-1676    4p:  5231-4932-4608-3877




                      Phi.MINING_INSPIRATION_MULT=2.999    2p:  137-166    4p:   0- 0- 0- 0
                        Phi.MINING_INSPIRATION_MULT=3.5    2p:  175-128    4p:   0- 0- 0- 0
                        Phi.MINING_INSPIRATION_MULT=4.0    2p:  150-153    4p:   0- 0- 0- 0
                        Phi.MINING_INSPIRATION_MULT=4.5    2p:  175-128    4p:   0- 0- 0- 0
                        Phi.MINING_INSPIRATION_MULT=5.0    2p:  171-132    4p:   0- 0- 0- 0
                        Phi.MINING_INSPIRATION_MULT=3.0    2p:  707-808    4p:   0- 0- 0- 0

